#!/bin/sh -

# A script to make a Chado db from scratch using GMOD tools.  Must be
# run in the gmod-schema/chado directory.

FAST=''

if [ $1 = '-f' ]
then
  shift
  FAST=fast
fi

if [ ! $# = 4 ]
then
  echo "$0: needs 4 arguments: db_name_suffix host username password" 1>&2
  exit 1
fi

export PERL5LIB=lib

replace() {
  var=$1
  new_val=$2
  file=$3
  perl -pne "s/$var=.*/$var=$new_val/" $file > $file.new
  mv $file.new $file
}

DB_NAME_SUFFIX=$1
HOST=$2
USER=$3
PASSWORD=$4

DB=pombase-chado-base-$DB_NAME_SUFFIX

echo "building database: $DB on $HOST"

replace CHADO_DB_NAME $DB $HOME/.gmod_profile
replace CHADO_DB_HOST $HOST $HOME/.gmod_profile
replace CHADO_DB_USER $USER $HOME/.gmod_profile
replace CHADO_DB_PASS $PASSWORD $HOME/.gmod_profile

replace DBNAME $DB build.conf
replace DBHOSE $HOST build.conf
replace DBUSER $USER build.conf
replace DBPASS $PASSWORD build.conf

SOURCES_DIR=/var/pomcur/sources

#dropdb $DB; createdb $DB || exit 1

rm --verbose -rf tmp


(cd $SOURCES_DIR/pombe-embl/; svn update || exit 1)

echo update GO from CVS
(cd $SOURCES_DIR/go; cvs up)
echo update GO from SVN
(cd $SOURCES_DIR/go-svn; svn --ignore-externals update)

if [ $FAST = '' ]
then
  perl Makefile.PL
  make
  make load_schema
  make prepdb
  make ontologies
fi

echo loading GO
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/go-svn/ontology/gene_ontology_edit.obo | go-apply-xslt oboxml_to_chadoxml - > go_obo_text.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD go_obo_text.xml || exit 1

echo PSI-MOD.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/PSI-MOD.obo | go-apply-xslt oboxml_to_chadoxml - > mod_obo_text.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD mod_obo_text.xml || exit 1

echo mini iao.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombe-embl/mini-ontologies/iao.obo | go-apply-xslt oboxml_to_chadoxml > iao.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD iao.xml || exit 1

echo fypo-simple.obo
(cd $SOURCES_DIR/phenotype_ontology_for_chado/; up) && go2fmt.pl -p obo_text -w xml $SOURCES_DIR/phenotype_ontology_for_chado/releases/latest/fypo-simple.obo | go-apply-xslt oboxml_to_chadoxml - > phenotype_obo_text.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD phenotype_obo_text.xml || exit 1

echo fypo_extension_relations.obo
(cd $SOURCES_DIR/phenotype_ontology_for_chado/; up) && go2fmt.pl -p obo_text -w xml $SOURCES_DIR/phenotype_ontology_for_chado/supplemental_files/fypo_extension_relations.obo | go-apply-xslt oboxml_to_chadoxml - > phenotype_ex_rel_obo_text.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD phenotype_ex_rel_obo_text.xml || exit 1

echo go_annotation_extension_relations.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/go-svn/ontology/extensions/go_annotation_extension_relations.obo | go-apply-xslt oboxml_to_chadoxml - > anex_rel_obo_text.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD anex_rel_obo_text.xml || exit 1

echo peco.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/phenotype_ontology_for_chado/peco.obo | go-apply-xslt oboxml_to_chadoxml - > peco_obo_text.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD peco_obo_text.xml || exit 1

echo pro_small.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pro_small.obo | go-apply-xslt oboxml_to_chadoxml - > pro_small_obo_text.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD pro_small_obo_text.xml || exit 1

echo mini fypo_extension.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombe-embl/mini-ontologies/fypo_extension.obo | go-apply-xslt oboxml_to_chadoxml > fypo-ex.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD fypo-ex.xml || exit 1

echo mini chebi.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombe-embl/mini-ontologies/chebi.obo | go-apply-xslt oboxml_to_chadoxml > chebi.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD chebi.xml || exit 1

echo mini cl.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombe-embl/mini-ontologies/cl.obo | go-apply-xslt oboxml_to_chadoxml > cl.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD cl.xml || exit 1

echo mini pato.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombe-embl/mini-ontologies/pato.obo | go-apply-xslt oboxml_to_chadoxml > pato.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD pato.xml || exit 1

echo mini PR.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombe-embl/mini-ontologies/pombe_mini_PR.obo | go-apply-xslt oboxml_to_chadoxml > mini-pr.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD mini-pr.xml || exit 1

echo PSI-MOD_extension_relations.obo
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombe-embl/mini-ontologies/PSI-MOD_extension_relations.obo | go-apply-xslt oboxml_to_chadoxml > PSI-MOD_extension_relations.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD PSI-MOD_extension_relations.xml || exit 1

echo load pombase terms
go2fmt.pl -p obo_text -w xml $SOURCES_DIR/pombase/pombase_terms-v30.obo | go-apply-xslt oboxml_to_chadoxml > pombase_terms.xml && stag-storenode.pl -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD pombase_terms.xml || exit 1

echo populate cvtermpath

date; echo starting molecular_function
./bin/gmod_make_cvtermpath.pl -H $HOST -D $DB -d 'Pg' -u $USER -p $PASSWORD -c molecular_function
date; echo starting cellular_component
./bin/gmod_make_cvtermpath.pl -H $HOST -D $DB -d 'Pg' -u $USER -p $PASSWORD -c cellular_component
date; echo starting biological_process
./bin/gmod_make_cvtermpath.pl -H $HOST -D $DB -d 'Pg' -u $USER -p $PASSWORD -c biological_process
date; echo finished


echo make copies

for i in `seq 1 5`
do
  NEW_DB=pombase-build-$DB_NAME_SUFFIX-v$i
  echo $NEW_DB
  createdb -T $DB $NEW_DB
done
